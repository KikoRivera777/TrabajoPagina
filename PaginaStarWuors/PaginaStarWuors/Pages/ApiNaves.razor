@page "/Naves"


@using System.Net.Http;
@using System.Text.Json;
@using System.Collections.Generic;
@inject HttpClient httpClient

<style>
    .films {
        margin-top: 50px;
        border: 5px solid white;
        padding: 10px;
    }
</style>

<h2>Starships</h2>

<div>
    @if (starships != null)
    {
        foreach (var starship in starships)
        {
            <div class="films">
                <img src="https://starwars-visualguide.com/assets/img/starships/@(starships.IndexOf(starship) + 1).jpg">
                <h3>Name: @starship.name</h3>
                <h3>Model: @starship.model</h3>
                <h3>Manufacture: @starship.manufacturer</h3>
                <h3>Cost in credits: @starship.cost_in_credits</h3>
                <h3>Lenght: @starship.length</h3>
                <h3>Maz atmosphering speed: @starship.max_atmosphering_speed</h3>
                <h3>Crew: @starship.crew</h3>
                <h3>Passengers: @starship.passengers</h3>
                <h3>Cargo capacity: @starship.cargo_capacity</h3>
                <h3>Consumables: @starship.consumables</h3>
                <h3>Hyperdrive rating: @starship.hyperdrive_rating</h3>
                <h3>MGLT: @starship.MGLT</h3>
                <h3>Starship class: @starship.starship_class</h3>
                

            </div>
        }
    }
</div>

@code {
    string searchstring;
    HttpRequestMessage requestMessage;
    HttpResponseMessage responseMessage;
    List<Starship> starships;

    protected override async Task OnInitializedAsync()
    {
        starships = new List<Starship>();

        for (int i = 1; i <= 23; i++)
        {
            requestMessage = new HttpRequestMessage
                {
                    Method = HttpMethod.Get,
                    RequestUri = new Uri($"https://swapi.dev/api/starships/{i}")
                };

            responseMessage = await httpClient.SendAsync(requestMessage);

            if (responseMessage.IsSuccessStatusCode)
            {
                var responseString = await responseMessage.Content.ReadAsStringAsync();
                var starship = JsonSerializer.Deserialize<Starship>(responseString);
                starships.Add(starship);
            }
        }
    }

    public class Starship
    {
        public string name { get; set; }
        public string model { get; set; }
        public string manufacturer { get; set; }
        public string cost_in_credits { get; set; }
        public string length { get; set; }
        public string max_atmosphering_speed { get; set; }
        public string crew { get; set; }
        public string passengers { get; set; }
        public string cargo_capacity { get; set; }
        public string consumables { get; set; }
        public string hyperdrive_rating { get; set; }
        public string MGLT { get; set; }
        public string starship_class { get; set; }
        
    }
}
