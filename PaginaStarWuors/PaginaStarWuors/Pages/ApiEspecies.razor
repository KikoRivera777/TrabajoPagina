@page "/Especies"

@using System.Net.Http;
@using System.Text.Json;
@using System.Collections.Generic;
@inject HttpClient httpClient

<style>
    .species {
        margin-top: 50px;
        border: 5px solid white;
        margin-left: 10px;
        text-align: center;
        padding: 10px;
    }

    .container {
        display: grid;
        grid-template-columns: auto auto;
    }
</style>

<h2>Species</h2>

<div>
    @if (species != null)
    {
        <div class="container">
            @foreach (var specie in species)
            {
                <div class="starships">
                    @{
                        var imageUrl = $"https://starwars-visualguide.com/assets/img/species/{species.IndexOf(specie) + 1}.jpg";
                        var errorImageUrl = "https://www.rosemacsales.com/assets/images/no_image.png";
                    }
                    <img src="@imageUrl" onerror="this.src='@errorImageUrl'" />
                    <h3>Name: @specie.name</h3>
                    <h3>Classification: @specie.classification</h3>
                    <h3>Designation: @specie.designation</h3>
                    <h3>Average height: @specie.average_height</h3>
                    <h3>Skin color: @specie.skin_colors</h3>
                    <h3>Hair color: @specie.hair_colors</h3>
                    <h3>Eye color: @specie.eye_colors</h3>
                    <h3>Average Lifespan: @specie.average_lifespan</h3>
                    <h3>Homeworld: @specie.homeworld</h3>
                    <h3>Language: @specie.language</h3>
                    <h3>Characters</h3>
                    <ul>
                        @if (specie.charactersNames == null || specie.charactersNames.Count == 0)
                        {
                            <li>No information available</li>
                        }
                        else
                        {
                            @foreach (var characterName in specie.charactersNames)
                            {
                                <li>@characterName</li>
                            }
                        }
                    </ul>
                    <h3>Films:</h3>
                    <ul>
                        @if (specie.filmTitles == null || specie.filmTitles.Count == 0)
                        {
                            <li>No information available</li>
                        }
                        else
                        {
                            @foreach (var filmTitle in specie.filmTitles)
                            {
                                <li>@filmTitle</li>
                            }
                        }
                    </ul>
                </div>
            }
        </div>
    }
</div>

@code {
    string searchstring;
    HttpRequestMessage requestMessage;
    HttpResponseMessage responseMessage;
    List<Species> species;

    protected override async Task OnInitializedAsync()
    {
        species = new List<Species>();

        for (int i = 1; i <= 23; i++)
        {
            requestMessage = new HttpRequestMessage
                {
                    Method = HttpMethod.Get,
                    RequestUri = new Uri($"https://swapi.dev/api/species/{i}")
                };

            responseMessage = await httpClient.SendAsync(requestMessage);

            if (responseMessage.IsSuccessStatusCode)
            {
                var responseString = await responseMessage.Content.ReadAsStringAsync();
                var specie = JsonSerializer.Deserialize<Species>(responseString);

                //planeta
                //var planetResponse = await httpClient.GetAsync(specie.homeworld);
                //if (planetResponse.IsSuccessStatusCode)
                //{
                //    var planetResponseString = await planetResponse.Content.ReadAsStringAsync();
                //    var planet = JsonSerializer.Deserialize<Planet>(planetResponseString);
                //    specie.homeworld = planet.name;
                //}

                //peliculas
                specie.filmTitles = new List<string>();
                foreach (var filmUrl in specie.films)
                {
                    var filmResponse = await httpClient.GetAsync(filmUrl);
                    if (filmResponse.IsSuccessStatusCode)
                    {
                        var filmResponseString = await filmResponse.Content.ReadAsStringAsync();
                        var film = JsonSerializer.Deserialize<Film>(filmResponseString);
                        specie.filmTitles.Add(film.title);
                    }
                }

                //personajes
                //specie.charactersNames = new List<string>();
                //foreach (var charactersUrl in specie.characters)
                //{
                //    var characterResponse = await httpClient.GetAsync(charactersUrl);
                //    if (characterResponse.IsSuccessStatusCode)
                //    {
                //        var characterResponseString = await characterResponse.Content.ReadAsStringAsync();
                //        var character = JsonSerializer.Deserialize<Character>(characterResponseString);
                //        specie.charactersNames.Add(character.name);
                //    }
                //}

                species.Add(specie);
            }
        }
    }

    public class Species
    {
        public string name { get; set; }
        public string classification { get; set; }
        public string designation { get; set; }
        public string average_height { get; set; }
        public string skin_colors { get; set; }
        public string hair_colors { get; set; }
        public string eye_colors { get; set; }
        public string average_lifespan { get; set; }
        public string homeworld { get; set; }
        public string language { get; set; }
        public List<string> people { get; set; }
        public List<string> films { get; set; }
        public List<string> filmTitles { get; set; }
        public List<string> characters { get; set; }
        public List<string> charactersNames { get; set; }
    }

    public class Planet
    {
        public string name { get; set; }
    }

    public class Character
    {
        public string name { get; set; }
    }

    public class Film
    {
        public string title { get; set; }
    }
}
}
