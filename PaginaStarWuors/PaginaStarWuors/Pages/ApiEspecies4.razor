@page "/Especies4"

@using System.Net.Http;
@using System.Text.Json;
@using System.Collections.Generic;
@inject HttpClient httpClient

<style>
    .species {
        margin-top: 50px;
        border: 5px solid white;
        margin-left: 10px;
        text-align: center;
        padding: 10px;
        border-radius: 10px;
    }

        .species:hover {
            border-color: yellow;
            box-shadow: 2px 3px 26px 0px yellow;
            color: yellow;
        }

            .species:hover a {
                color: yellow;
            }

    .container {
        display: grid;
        grid-template-columns: auto auto;
    }

    .botones {
        display: flex;
        justify-content: center;
    }

    .boton {
        margin: 0 5px;
    }

        .boton:hover {
            background-color: yellow;
        }

    a {
        text-decoration: none;
        color: white;
    }

        a:hover {
            color: yellow;
        }

    .textoBoton {
        color: black;
    }

        .textoBoton:hover {
            color: black;
        }
</style>

<h2>Species</h2>

<div class="botones">
    <div class="buscador">
        <input type="text" class="buscar" @bind="searchstring" @bind:event="oninput" />
    </div>
    <button class="boton"><a class="textoBoton"  href="Especies">1</a></button>
    <button class="boton"><a class="textoBoton"  href="Especies2">2</a></button>
    <button class="boton"><a class="textoBoton"  href="Especies3">3</a></button>
    <button class="boton"><a class="textoBoton" href="Especies4">4</a></button>
    <button class="boton" @onclick="MostrarDefaultSpecies">Default</button>
    <button class="boton" @onclick="MostrarAscSpecies">Ascendent</button>
    <button class="boton" @onclick="MostrarDescSpecies">Descendent</button>
</div>
<div>
    @if (mostrarDefaultSpecies)
    {
        <div class="container">
            @foreach (var specie in searchSpecies)
            {
                <div class="species">
                    @{
                        var imageUrl = $"https://starwars-visualguide.com/assets/img/species/{species.IndexOf(specie) + 31}.jpg";
                        var errorImageUrl = "https://www.rosemacsales.com/assets/images/no_image.png";
                    }
                    <img src="@imageUrl" onerror="this.src='@errorImageUrl'" />
                    <h3><a href="Especie/@(species.IndexOf(specie) + 31)" @onclick="() => SpecieIndex = species.IndexOf(specie) + 31">Name: @(string.IsNullOrEmpty(specie.name) ? "No information available" : specie.name)</a></h3>
                </div>
            }
        </div>
    }
    else if (mostrarAscSpecies)
    {
        <div class="species">
            @foreach (var specie in AscSpecies)
            {
                <div class="characters">
                    @{
                        var imageUrl = $"https://starwars-visualguide.com/assets/img/species/{species.IndexOf(specie) + 31}.jpg";
                        var errorImageUrl = "https://www.rosemacsales.com/assets/images/no_image.png";
                    }
                    <img src="@imageUrl" onerror="this.src='@errorImageUrl'" />
                    <h3><a href="Especie/@(species.IndexOf(specie) + 31)" @onclick="() => SpecieIndex = species.IndexOf(specie) + 31">Name: @(string.IsNullOrEmpty(specie.name) ? "No information available" : specie.name)</a></h3>
                </div>
            }
        </div>
    }
    else if (mostrarDescSpecies)
    {
        <div class="species">
            @foreach (var specie in DescSpecies)
            {
                <div class="characters">
                    @{
                        var imageUrl = $"https://starwars-visualguide.com/assets/img/species/{species.IndexOf(specie) + 31}.jpg";
                        var errorImageUrl = "https://www.rosemacsales.com/assets/images/no_image.png";
                    }
                    <img src="@imageUrl" onerror="this.src='@errorImageUrl'" />
                    <h3><a href="Especie/@(species.IndexOf(specie) + 31)" @onclick="() => SpecieIndex = species.IndexOf(specie) + 31">Name: @(string.IsNullOrEmpty(specie.name) ? "No information available" : specie.name)</a></h3>
                </div>
            }
        </div>
    }
</div>

@code {
    string searchstring = string.Empty;
    HttpRequestMessage requestMessage;
    HttpResponseMessage responseMessage;
    List<Species> searchSpecies => species.Where(x => x.name.ToUpper().Contains(searchstring.ToUpper())).ToList();
    List<Species> AscSpecies;
    List<Species> DescSpecies;
    List<Species> species;
    int SpecieIndex { get; set; }

    private bool mostrarDefaultSpecies = true;
    private bool mostrarAscSpecies = false;
    private bool mostrarDescSpecies = false;

    protected override async Task OnInitializedAsync()
    {
        species = new List<Species>();

        for (int i = 31; i <= 37; i++)
        {
            requestMessage = new HttpRequestMessage
                {
                    Method = HttpMethod.Get,
                    RequestUri = new Uri($"https://swapi.dev/api/species/{i}")
                };

            responseMessage = await httpClient.SendAsync(requestMessage);

            if (responseMessage.IsSuccessStatusCode)
            {
                var responseString = await responseMessage.Content.ReadAsStringAsync();
                var specie = JsonSerializer.Deserialize<Species>(responseString);

                species.Add(specie);
            }
        }
    }

    private void MostrarDefaultSpecies()
    {
        mostrarDefaultSpecies = true;
        mostrarAscSpecies = false;
        mostrarDescSpecies = false;
    }

    private void MostrarAscSpecies()
    {
        AscSpecies = species.OrderBy(x => x.name).ToList();
        mostrarDefaultSpecies = false;
        mostrarAscSpecies = true;
        mostrarDescSpecies = false;
    }

    private void MostrarDescSpecies()
    {
        DescSpecies = species.OrderByDescending(x => x.name).ToList();
        mostrarDefaultSpecies = false;
        mostrarAscSpecies = false;
        mostrarDescSpecies = true;
    }

    public class Species
    {
        public string name { get; set; }
        public string url { get; set; }
    }
}