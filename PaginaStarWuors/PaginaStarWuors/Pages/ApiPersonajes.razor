@page "/Personajes"

@using System.Net.Http;
@using System.Text.Json;
@using System.Collections.Generic;
@inject HttpClient httpClient

<style>
    .characters {
        margin-top: 50px;
        border: 5px solid white;
        padding: 10px;
    }
</style>

<h2>Characters</h2>

<div>
    @if (characters != null)
    {
        foreach (var character in characters)
        {
            <div class="characters">
                @{
                    var imageUrl = character != null
                    ? $"https://starwars-visualguide.com/assets/img/characters/{characters.IndexOf(character) + 1}.jpg"
                    : "https://www.rosemacsales.com/assets/images/no_image.png";
                }
                <img src="@imageUrl">
                <h3>Name: @character.name</h3>
                <h3>Height: @character.height ft</h3>
                <h3>Mass: @character.mass pounds</h3>
                <h3>Hair color: @character.hair_color</h3>
                <h3>Skin color: @character.skin_color</h3>
                <h3>Eye color: @character.eye_color</h3>
                <h3>Birth year: @character.birth_year</h3>
                <h3>Gender: @character.gender</h3>
            </div>
        }
    }

</div>

@code {
    string searchstring;
    HttpRequestMessage requestMessage;
    HttpResponseMessage responseMessage;
    List<Character> characters;

    protected override async Task OnInitializedAsync()
    {
        characters = new List<Character>();

        for (int i = 1; i <= 83; i++)
        {
            requestMessage = new HttpRequestMessage
                {
                    Method = HttpMethod.Get,
                    RequestUri = new Uri($"https://swapi.dev/api/people/{i}")
                };

            responseMessage = await httpClient.SendAsync(requestMessage);

            if (responseMessage.IsSuccessStatusCode)
            {
                var responseString = await responseMessage.Content.ReadAsStringAsync();
                var character = JsonSerializer.Deserialize<Character>(responseString);
                characters.Add(character);
            }
        }
    }

    public class Character
    {
        public string name { get; set; }
        public string height { get; set; }
        public string mass { get; set; }
        public string hair_color { get; set; }
        public string skin_color { get; set; }
        public string eye_color { get; set; }
        public string birth_year { get; set; }
        public string gender { get; set; }
    }
}