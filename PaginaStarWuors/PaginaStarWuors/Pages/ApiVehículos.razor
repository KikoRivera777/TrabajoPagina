@page "/Vehículos"

@using System.Net.Http;
@using System.Text.Json;
@using System.Collections.Generic;
@inject HttpClient httpClient

<style>
    .vehicles {
        margin-top: 50px;
        border: 5px solid white;
        margin-left: 10px;
        text-align: center;
        padding: 10px;
    }

    .container {
        display: grid;
        grid-template-columns: auto auto;
    }
</style>

<h2>Vehicles</h2>

<div>
    @if (vehicles != null)
    {
        <div class="container">
            @foreach (var vehicle in vehicles)
            {
                <div class="vehicles">
                    @{
                        var imageUrl = $"https://starwars-visualguide.com/assets/img/vehicles/{vehicles.IndexOf(vehicle) + 1}.jpg";
                        var errorImageUrl = "https://www.rosemacsales.com/assets/images/no_image.png";
                    }
                    <img src="@imageUrl" onerror="this.src='@errorImageUrl'" />
                    <h3>Name: @(string.IsNullOrEmpty(vehicle.name) ? "No information avalible" : vehicle.name)</h3>
                    <h3><a href="Vehículo">@vehicle.url</a></h3>
                </div>
            }
        </div>
    }
</div>

@code {
    string searchstring;
    HttpRequestMessage requestMessage;
    HttpResponseMessage responseMessage;
    List<Vehicles> vehicles;

    protected override async Task OnInitializedAsync()
    {
        vehicles = new List<Vehicles>();

        for (int i = 1; i <= 76; i++)
        {
            requestMessage = new HttpRequestMessage
                {
                    Method = HttpMethod.Get,
                    RequestUri = new Uri($"https://swapi.dev/api/vehicles/{i}")
                };

            responseMessage = await httpClient.SendAsync(requestMessage);

            if (responseMessage.IsSuccessStatusCode)
            {
                var responseString = await responseMessage.Content.ReadAsStringAsync();
                var vehicle = JsonSerializer.Deserialize<Vehicles>(responseString);

                vehicles.Add(vehicle);
            }
        }
    }

    public class Vehicles
    {
        public string name { get; set; }
        public string url { get; set; }
    }
}
