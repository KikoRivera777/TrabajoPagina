@inject IJSRuntime JSRuntime
<head>
    <link rel="stylesheet" href="/css/star.css">
    <link rel="stylesheet" href="~/css/star.css.map">

</head>
<div id="container">
    <div id="burger">
        <div class="bun top"></div>
        <div class="filling"></div>
        <div class="bun bottom"></div>
    </div>
</div>

<nav>
    <ul>
        <li class="red">
            <a class="links" href="">Home</a>
        </li>
        <li>
            <a class="links" href="Personajes">Characters</a>
        </li>
        <li class="green">
            <a class="links" href="Películas">Films</a>
        </li>
        <li class="red">
            <a class="links" href="Especies">Species</a>
        </li>
        <li class="yellow">
            <a class="links" href="Vehículos">Vehicles</a>
        </li>
        <li class="purple">
            <a class="links" href="Planetas">Planets</a>
        </li>
        <li>
            <a class="links" href="Naves">Starships</a>
        </li>
        <li class="green">
            <a class="links" href="Trailers">Trailers</a>
        </li>
        <li class="yellow">
            <a class="links" href="Most_like_characters">Graphic</a>
        </li>
    </ul>
</nav>
<div class="fade"></div>

@code {
    private async Task InitializeJavaScript()
    {
        await JSRuntime.InvokeVoidAsync("eval", @"
            const nav = document.querySelector('nav');
            document.querySelector('#burger').addEventListener('click',(e) => {
                e.currentTarget.classList.toggle('active');
                nav.classList.toggle('show');
            });
        ");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeJavaScript();
        }
    }


}